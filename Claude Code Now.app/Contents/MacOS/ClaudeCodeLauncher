#!/bin/bash

# ðŸ–¥ Claude Code Now - Launch instantly without confirmation
# Get the path parameter if provided
TARGET_DIR="$1"

# Set complete PATH including common Node.js and CLI tool paths
# First, try to source common shell configurations to get the proper PATH
if [ -f "$HOME/.zshrc" ]; then
    source "$HOME/.zshrc" 2>/dev/null || true
elif [ -f "$HOME/.bashrc" ]; then
    source "$HOME/.bashrc" 2>/dev/null || true
elif [ -f "$HOME/.bash_profile" ]; then
    source "$HOME/.bash_profile" 2>/dev/null || true
fi

# Add common paths that might not be in the shell config
export PATH="$HOME/.nvm/versions/node/v22.17.1/bin:$HOME/.npm-global/bin:$HOME/.npm/bin:$HOME/Library/pnpm:$HOME/.local/bin:$HOME/.cargo/bin:/usr/local/bin:/opt/homebrew/bin:/usr/local/share/npm/bin:$PATH"

# If no parameter provided, try to get current Finder path
if [ -z "$TARGET_DIR" ]; then
    # Use AppleScript to get current Finder path
    TARGET_DIR=$(osascript -e '
        tell application "Finder"
            try
                set currentPath to POSIX path of (target of front window as alias)
            on error
                set currentPath to ""
            end try
        end tell
    ')
fi

# If still no path, use default directory
if [ -z "$TARGET_DIR" ]; then
    TARGET_DIR="/Users/oran/Documents/Claude Code"
fi

# Check if directory exists
if [ ! -d "$TARGET_DIR" ]; then
    osascript -e "display alert \"Error\" message \"Directory '$TARGET_DIR' does not exist\""
    exit 1
fi

# Check if Claude Code is installed
# Try to find claude command in common locations
CLAUDE_PATH=""
if command -v claude >/dev/null 2>&1; then
    CLAUDE_PATH=$(command -v claude)
else
    # Try common installation locations
    for path in "$HOME/Library/pnpm/claude" "$HOME/.npm-global/bin/claude" "$HOME/.npm/bin/claude" "$HOME/.local/bin/claude" "/usr/local/bin/claude" "/opt/homebrew/bin/claude"; do
        if [ -f "$path" ] && [ -x "$path" ]; then
            CLAUDE_PATH="$path"
            break
        fi
    done
fi

if [ -z "$CLAUDE_PATH" ]; then
    osascript -e "display alert \"Claude Code Not Installed\" message \"Please check if Claude Code CLI is properly installed.

Try running: npm install -g claude

Or check the path with: command -v claude\""
    exit 1
fi

# Launch iTerm (preferred) or Terminal and run Claude Code in specified directory
if [ -d "/Applications/iTerm.app" ] || [ -d "/Applications/iTerm 2.app" ]; then
    # Use iTerm if available
    if [ -d "/Applications/iTerm 2.app" ]; then
        ITERM_APP="iTerm 2"
    else
        ITERM_APP="iTerm"
    fi

    osascript <<EOF
tell application "$ITERM_APP"
    activate
    create window with default profile
    tell current session of current window
        write text "cd " & quoted form of "$TARGET_DIR" & " && claude --permission-mode bypassPermissions"
    end tell
end tell
EOF
else
    # Fallback to Terminal
    osascript <<EOF
tell application "Terminal"
    activate
    do script "cd " & quoted form of "$TARGET_DIR" & " && claude --permission-mode bypassPermissions"
end tell
EOF
fi